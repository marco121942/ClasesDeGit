Git
-----
-Herramienta de control de versiones  de un proyecto y saber quiém y qué fue lo que modificó
-Es como una máquina de tiempo.


-Git fue creado por Linus Torvalds en 2005 y ala vez creo linux.

-tres pautas:
1.-No cometer los mismos problemas.
2.-Hacer un sistema parecido alos otros sitemas que no eran de código abierto.
3.-Lograr que sea simple para utilizarlo.



->Con el .git-> la carpeta se llama repositorio
->El stage o escenario es antes del commit
->Con git add . ->agregamos las carpetas al stage

Comandos:
git
git  version
git help
clear
git config --global user.name ""
git config --global user.email ""
git config --global -e ->para salir "Esc , :, q"
git init
git status
git add .
git add index.html
git commit -m ""
git checkout .
git log
git status -s ->"te brinda menos información" ->M->significa que fueron modificados , ??->es nueva
git status -s -b ->nos muestra en la rama que nos encontramos
git reset HEAD . ->quita del stage
git reset HEAD css/estilos.css
git add *.md
git commit -> A->agregamos el texto ->para salir "Esc,:,WW", para que se guarde y salir
git tag v1.0.0
git tag
git tag -D v1.0.0 ->borra
git tag -a v1.0.0 -m "Esta es la versión donde se utiliza boostrap"
git show v1.0.0
git tag -a v1.0.2 cf15b5d6d5432632a77b46ed44e3cdea8a7c2b96 -m "Esta es la version beta del proyecto"
git log --oneline --decorate --all --graph
git config --global alias.lg "log --oneline --decorate --all --graph"
comparando commit
git diff cf15b5d
git diff 
git diff --staged
git commit --amend -m "Agregamos estilos"
git reset HEAD^


regresar

git reset --soft cf15b5d
git checkout -- .
git reset --mixed ba8b589
git checkout -- .
git reset --hard aa438bf

Historial
$ git reflog


renombrar
git mv readme.md nuevo.md
movimiento readme
git mv nuevo.md css/nuevo.md

borrar
git rm css/nuevo.md

git checkout -- .


Ignorando archivos
.gitignore ->se aplica para archivos que git no estaba rastreando
git rm --cached readme.md->borra el rastreo

git config cord.autocrlf true


Rama->es la linea de tiempo
git branch nuevaRama
git branch
git checkout nuevaRama
git branch -d nuevaRama

git checkout -b nuevosparrafos

agregar add . y commit
git commit -am ""


Mezclando ramas
git merge nuevosparrafos
Fast-forward ->mas facil
recursive->esc-:wq
CONFLICT (content): Merge conflict in index.html


git rease master
git rebase -i HEAD~3
pink->lo reemplazas por la r luego esc,:wq y cambias el nombre del commit

